import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { api } from "~/utils/api";
import Up from "~/animations/up";



import {
  ClientRoute,
  ClientRouter,
  ClientRouterProvider,
} from "../utils/client-router";

import DashboardScreen from "~/screens/DashboardScreen";
import ProfileViewScreen from "~/screens/ProfileViewScreen";
import Loading from "~/components/test/Loading";



export default function Home() {

  function Event(props) {
    const isEvent = props.isEvent;
    if (isEvent === false) {
      return <div className="inner home-grid ">
            <img className="logo" src="/Hardmode-logo.png"/>
        <div>
          <h1 className="text-8xl font-extrabold title">Enchant</h1>
          <a href="/form" className="">
            <button className="prihlaska-btn">Přihláška</button>
            </a>
            </div>
    </div>
    }
    return <div className="inner ">
      <Up>
        <img src="/Hardmode-logo.png" className=""/>
        </Up>
        <h1 className="absolute text-5xl text-white top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 pb-10">text</h1>
</div>;
  }
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="head">
        <div className="top-bg">
          </div>
          
    {/* // ak je event tak daj true */}

        <Event isEvent={false} />
        </div>
        <div className="page">
          <div className="inner text-center">
            <AuthShowcase />
            </div>
<div className="dark-zone">
            <div className="inner text-center">
      <h1>hello</h1>
      </div>

    </div>
    <div className="inner text-center">
        <h1>Heloodsdasdoasoo</h1>
        <ClientRouterProvider>
        <ClientRouter whileLoading={<Loading />}>
          <ClientRoute path="/" Component={DashboardScreen} />
          <ClientRoute path="/view/:id" Component={ProfileViewScreen} />
        </ClientRouter>
      </ClientRouterProvider>
      </div>
    </div>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();


  return (
    <div className="flex flex-col items-center justify-center gap-4">
<h1>hello</h1>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
